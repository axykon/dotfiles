set encoding=utf-8
set hidden
set tabstop=2
set shiftwidth=2
set expandtab
set updatetime=300
set ttimeoutlen=50
set nowrap
set fillchars=vert:\â”‚
set number
set signcolumn=auto
set incsearch

nnoremap <space> <nop>
map <space> <leader>

let data_dir = '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
Plug 'airblade/vim-gitgutter'
Plug 'arcticicestudio/nord-vim'
" Plug 'tpope/vim-rsi'
Plug 'tpope/vim-vinegar'
Plug 'stephpy/vim-yaml'
Plug 'vim/killersheep'
Plug 'towolf/vim-helm'

" -----
" Plug 'airblade/vim-rooter'
Plug 'aymericbeaumet/vim-symlink'
Plug 'itchyny/lightline.vim'
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'junegunn/goyo.vim'
Plug 'ryanoasis/vim-devicons'
Plug 'sainnhe/sonokai'
Plug 'sainnhe/everforest'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-rhubarb'
Plug 'junegunn/gv.vim'
Plug 'vim-test/vim-test'
Plug 'voldikss/vim-floaterm'
Plug 'Yggdroot/indentLine'
Plug 'jasonccox/vim-wayland-clipboard'
call plug#end()

if &term =~ "tmux" || &term =~ "foot"
  let &t_8f = "\<Esc>[38:2:%lu:%lu:%lum"
  let &t_8b = "\<Esc>[48:2:%lu:%lu:%lum"
endif

if has('termguicolors')
  set termguicolors
endif

if &term == 'xterm-kitty' || &term == 'tmux-256color' || &term == 'alacritty' || &term == 'xterm-256color' || &term == "foot"
  let &t_SI .= "\<Esc>[6 q"
  let &t_EI .= "\<Esc>[2 q"
endif

if &term == 'xterm-kitty'
  let &t_ut=''
endif

set laststatus=2
set noshowmode
let g:sonokai_style = 'andromeda'
let g:lightline = {
\   'colorscheme': 'sonokai',
\   'active': {
\     'left': [[ 'mode', 'paste'],
\              [ 'cocstatus', 'gitbranch', 'readonly', 'modified' ]]
\   },
\   'component_function': {
\     'cocstatus': 'coc#status',
\     'gitbranch': 'FugitiveHead',
\   }
\ }

runtime ftplugin/man.vim

set background=dark
colorscheme sonokai

let test#strategy = 'vimterminal'
nnoremap <leader>tn :TestNearest<cr>
nnoremap <leader>tl :TestLast<cr>

" fzf
nnoremap <leader><space> :Buffers<cr>
nnoremap <leader>? :History<cr>
nnoremap <leader>g :GFiles<cr>

function! s:helptab()
  if &buftype == 'help'
    wincmd T
    nnoremap <buffer> q :q<cr>
  endif
endfunction
augroup vimrc
  autocmd BufEnter *.txt call s:helptab()
augroup end


" File types
autocmd Filetype go setlocal ts=4 sw=4 noexpandtab

autocmd BufNew,BufNewFile,BufRead */Jenkinsfile :setfiletype groovy
