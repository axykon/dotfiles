set encoding=utf-8
set hidden
set tabstop=4
set shiftwidth=4
set updatetime=300
set nowrap
set fillchars=vert:\â”‚

nnoremap <space> <nop>
map <space> <leader>

let data_dir = '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
" Plug 'airblade/vim-gitgutter'
Plug 'airblade/vim-rooter'
Plug 'arcticicestudio/nord-vim'
Plug 'aymericbeaumet/vim-symlink'
Plug 'felipec/vim-felipec'
Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app && yarn install'  }
Plug 'itchyny/lightline.vim'
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'junegunn/goyo.vim'
Plug 'junegunn/limelight.vim'
Plug 'ludovicchabant/vim-gutentags'
Plug 'morhetz/gruvbox'
Plug 'romainl/apprentice'
Plug 'ryanoasis/vim-devicons'
Plug 'sainnhe/gruvbox-material'
Plug 'sainnhe/sonokai'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-rhubarb'
Plug 'tpope/vim-rsi'
Plug 'tpope/vim-vinegar'
Plug 'vim-test/vim-test'
Plug 'voldikss/vim-floaterm'
Plug 'preservim/tagbar'
Plug 'stephpy/vim-yaml'
Plug 'yegappan/lsp'
Plug 'vim/killersheep'
Plug 'towolf/vim-helm'
call plug#end()

" Correct RGB escape codes for vim inside tmux
let &t_8f = "\<Esc>[38:2:%lu:%lu:%lum"
let &t_8b = "\<Esc>[48:2:%lu:%lu:%lum"

if has('termguicolors')
	set termguicolors
endif

if &term == 'xterm-kitty' || &term == 'tmux-256color' || &term == 'alacritty' || &term == 'xterm-256color'
	let &t_SI .= "\<Esc>[6 q"
	let &t_EI .= "\<Esc>[2 q"
endif

if &term == 'xterm-kitty'
	let &t_ut=''
endif

set laststatus=2
set noshowmode
let g:lightline = {
			\ 'colorscheme': 'sonokai',
			\ 'active': {
				\ 'left': [ [ 'mode', 'paste'],
				\           [ 'gitbranch', 'readonly', 'modified' ] ]
		    \ },
			\ 'component_function': {
				\ 'gitbranch': 'FugitiveHead',
			\ }
			\ }

set background=dark

" let g:sonokai_style = 'espresso'
colorscheme sonokai


set number
set relativenumber
set signcolumn=yes

nnoremap <leader>tn :TestNearest<cr>
nnoremap <leader>tl :TestLast<cr>

" fzf
nnoremap <leader><space> :Buffers<cr>
nnoremap <leader>? :History<cr>
nnoremap <leader>g :GFiles<cr>

let lspServers = [
			\ {
				\	'filetype': ['go'],
				\	'path': '/home/axykon/go/bin/gopls',
				\	'args': []
				\  },
				\  {
					\  'filetype': ['javascript'],
					\  'path': '/home/axykon/.local/bin/typescript-language-server',
					\  'args': ['--stdio']
					\ }
					\ ]

" call g:LspAddServer(lspServers)

nnoremap K :LspHover<cr>
nnoremap gd :LspGotoDefinition<cr>

