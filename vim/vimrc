set nocp
set hidden
set tabstop=4
set shiftwidth=4
set expandtab
set autoindent
set updatetime=300
set ttimeoutlen=50
set nowrap
set fillchars=vert:\â”‚
set number
set signcolumn=number
set incsearch
set ignorecase
set smartcase
set path=.,,
set wildmenu
set wildoptions=pum
set laststatus=2
set showtabline=1
set belloff=all
set scrolloff=3
set hlsearch
set completeopt=menu,menuone
set mouse=a
if has('termguicolors')
  set termguicolors
endif

if has('win32')
  set shell=pwsh
endif

" Cursor shape
if index(["xterm-kitty", "tmux-256color", "alacritty", "xterm-256color", "foot", 'win32'], &term) != -1
    let &t_SI .= "\<Esc>[6 q"
    let &t_EI .= "\<Esc>[2 q"
endif
set t_ut=

filetype on
syntax on
colorscheme PaperColor

nnoremap <space> <nop>
map <space> <leader>
nnoremap <C-l> :noh<CR><C-l>

packadd minpac

call minpac#init()

call minpac#add('k-takata/minpac', {'type': 'opt'})
call minpac#add('rose-pine/vim', {'name': 'rose-pine'})
call minpac#add('tpope/vim-fugitive')
call minpac#add('tpope/vim-commentary')
call minpac#add('Donaldttt/fuzzyy')
call minpac#add('yegappan/lsp')
call minpac#add('preservim/vim-markdown')
call minpac#add('girishji/scope.vim')
call minpac#add('itchyny/lightline.vim')
call minpac#add('catppuccin/vim', {'name': 'catppuccin'})
call minpac#add('tpope/vim-vinegar')
call minpac#add('tpope/vim-dadbod')
call minpac#add('vim-test/vim-test')
call minpac#add('sainnhe/gruvbox-material')
call minpac#add('NLKNguyen/papercolor-theme')

" Status Line
let g:lightline = {
    \   'colorscheme': 'PaperColor',
    \   'active': {
    \     'left': [[ 'mode', 'paste' ],
    \              [ 'readonly', 'filename', 'modified' ]]
    \   },
    \ }

" LSP
let lspServers = []
if executable('typescript-language-server')
    let lspServers = lspServers->add({
                \   'filetype': ['javascript', 'typescript'],
                \   'path': 'typescript-language-server.cmd',
                \   'args': ['--stdio', '--log-level', '4'],
                \ })
endif
if executable('gopls')
	let lspServers = lspServers->add({
				\   'filetype': ['go', 'gomod'],
				\   'path': 'gopls',
				\   'rootSearch': ['go.work', 'go.mod', '.git/'],
				\   'syncInit': v:true,
				\ })
endif

if executable('rust-analyzer')
	let lspServers = lspServers->add({
				\   'filetype': ['rust'],
				\   'path': 'rustup',
				\   'args': ['run', 'stable', 'rust-analyzer'],
				\   'syncInit': v:true,
				\ })
endif


if executable('jdtls')
    let lspServers = lspServers->add({
                \   'filetype': ['java'],
                \   'path': 'jdtls',
                \   'args': [
                \     '-data', expand('~/.local/cache/jdtls'),
                \     '--jvm-arg=-javaagent:' .. expand('~/.local/lib/java/lombok.jar'),
                \   ],
                \ })
endif

let lspOpts = {
            \ 'autoHighlightDiags': v:true,
            \ 'autoPopulateDiags': v:true,
			\ 'highlightDiagInline': v:true,
			\ 'autoComplete': v:true,
			\ 'echoSignature': v:false,
			\ 'showDiagWithVirtualText': v:true,
			\ 'diagVirtualTextAlign': 'after',
			\ 'showDiagInPopup': v:true,
			\ 'outlineWinSize': 50,
            \ }

autocmd VimEnter * 
    \ call LspAddServer(lspServers) |
    \ call LspOptionsSet(lspOpts)

autocmd! User LspAttached setlocal tagfunc=lsp#lsp#TagFunc | setlocal keywordprg=:LspHover

nnoremap    nnoremap   nnoremap <leader>e :LspDiagCurrent<cr>
nnoremap <leader>a :LspCodeAction<cr>
nnoremap <leader>o <cmd>LspDocumentSymbol<cr>
