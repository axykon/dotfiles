* Install minikube
  #+begin_src sh :results output silent :var version="v1.9.2" :dir /sudo::
    curl -sL "https://github.com/kubernetes/minikube/releases/download/${version}/minikube-linux-amd64" \
        -o /usr/local/bin/minikube

    chmod 0755 /usr/local/bin/{minikube}
    bashcomp=/etc/bash_completion.d/_minikube
    minikube completion bash > $bashcomp
    chmod 0644 $bashcomp

    zshcomp=/usr/local/share/zsh/completions/_minikube
    install -m 0755 -d $(dirname $zshcomp)
    kubectl completion zsh > $zshcomp
    chmod 0644 $zshcomp
  #+end_src

  KVM requires a CPU with virtualization extensions, found on most
  consumer CPUs. These extensions are called Intel VT or AMD-V. To
  check whether you have CPU support, run the following command:
  #+begin_src sh :results output silent
    egrep '^flags.*(vmx|svm)' /proc/cpuinfo
  #+end_src

  Things to remember:
  #+begin_example sh
    sudo dnf install libvirt
    sudo usermod -aG libvirt $USER
    minikube config set vm-driver kvm2
    systemctl start libvirtd
  #+end_example

  To pull images from cloud repositories this minikube addon may help:
  #+begin_example
    minikube addons configure registry-creds
    minikube addons enable registry-creds
  #+end_example
  But see [[https://github.com/kubernetes/minikube/issues/5753#issuecomment-548858200][this]].

* Install kubectl
  #+begin_src sh :results output silent :dir /sudo::
    curl -sL "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl" \
         -o /usr/local/bin/kubectl

    chmod 0755 /usr/local/bin/kubectl
    bashcomp=/etc/bash_completion.d/_kubectl     
    kubectl completion bash  > $bashcomp
    chmod 0644 $bashcomp

    zshcomp=/usr/local/share/zsh/completions/_kubectl
    install -m 0755 -d $(dirname $zshcomp)
    kubectl completion zsh > $zshcomp
    chmod 0644 $zshcomp
  #+end_src

* Install kustomize
  #+begin_src sh :var version="v3.5.4" :results output silent :dir /sudo::/tmp
    set -e
    curl -L https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2F${version}/kustomize_${version}_linux_amd64.tar.gz \
    | tar -C /usr/local/bin -xz --mode=0755 kustomize

    echo 'complete -C /usr/local/bin/kustomize kustomize' > /etc/bash_completion.d/_kustomize
    chmod 0644 /etc/bash_completion.d/_kustomize
  #+end_src

* Install scaffold
  #+begin_src sh :results output silent :dir /sudo::/tmp
    set -e
    curl -Lo /usr/local/bin/skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
    chmod 0755 /usr/local/bin/skaffold

    skaffold completion bash > /etc/bash_completion.d/_skaffold
    chmod 0644 /etc/bash_completion.d/_skaffold
  #+end_src

* Install helm
  #+begin_src sh :var version="v3.1.0" :results output silent :dir /sudo::
    set -e
    curl -sL "https://get.helm.sh/helm-$version-linux-amd64.tar.gz" \
        | tar -C /usr/local/bin -xz --strip-components=1 --mode=0755 \
              linux-amd64/helm

    helm completion bash > /etc/bash_completion.d/_helm
  #+end_src

* Fonts
  :properties:
  :header-args: :results output silent
  :end:

** Install Go fonts
   #+begin_src sh
     curl -sL "https://go.googlesource.com/image/+archive/master/font/gofont/ttfs.tar.gz" \
         | tar -C ~/.fonts -xz --mode=0644 --wildcards '*.ttf'
   #+end_src

** Install FiraCode fonts
   #+begin_src sh
     TEMPFILE=$(mktemp fira-code-XXX.zip)
     curl -sL "https://github.com/tonsky/FiraCode/releases/download/2/FiraCode_2.zip" \
          -o $TEMPFILE
     rm -f ~/.fonts/FiraCode*.ttf
     unzip -jd ~/.fonts $TEMPFILE ttf/\*.ttf
   #+end_src

** Set default monospace font
   #+name: font-list
   - Source Code Pro
   - Go Mono
   - Fira Mono
   - Fira Mono Light
   - Fira Code
   - Fira Code Light
   - Iosevka
   - Liberation Mono

   #+name: select-font
   #+begin_src elisp :var fonts=font-list :results value
     (ivy-read "Font name: " fonts)
   #+end_src

   #+name: set-monospace-font
   #+begin_src sh :var font=select-font() size=(read-from-minibuffer "Font size: ") :results output silent
     gsettings set org.gnome.desktop.interface monospace-font-name "$font $size"
   #+end_src
  
* IDEA
  :properties:
  :header-args: :var SCTL_FILE="/etc/sysctl.d/50-idea.conf"
  :header-args+: :dir /sudo:: :results output silent
  :end:

  #+name: check-max-user-watches
  #+begin_src sh
    echo -ne "File contents: "
    [[ -f $SCTL_FILE ]] && cat $SCTL_FILE || echo "---"
    echo -ne "Actual value: "
    sysctl fs.inotify.max_user_watches
  #+end_src

  #+name: set-max-user-watches
  #+begin_SRC sh
    cat > $SCTL_FILE <<EOF
    fs.inotify.max_user_watches = 524288
    EOF

    sysctl -p --system
  #+end_SRC

* Rpmfusion
  #+begin_src sh :dir /sudo:: :results output silent
    RELEASE=$(rpm -E %fedora)
    dnf install -y \
        https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$RELEASE.noarch.rpm \
        https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$RELEASE.noarch.rpm \
  #+end_src

